#!/bin/bash
# systemd-tmpfiles doesn't support skipping writing to files that already exist
# - copy the docker group to /etc because docker reads /etc/group directly
# - copy the sudo and wheel groups to /etc so that new uses can be added to them
# - copy the core and root users to /etc so the passwd utility works correctly

# Inherit root from environment or command line
ROOT="${1:-$ROOT}"
BASE="${2:-${ROOT}/usr/share/baselayout}"

# Users/Groups to copy so they can be modified
COPY_USERS="root|core"
COPY_GROUPS="root|core|docker|sudo|wheel"

mkdir -p "${ROOT}/etc"

# readable files
umask 022
# Output those lines in BASE/passwd (that are to be copied) when their user/group names are not in /etc/passwd already,
# and append the entries from BASE/passwd to /etc/passwd.
# But since we don't want lines/half lines being added also be used as patterns, we first read the file and in a second
# step write to it. (We are fine if /etc/passwd doesn't exist as this will result in no patterns. As patterns have the
# filtering out function, no patterns means that every line will match.)
PATTERNS=$(cut -s -d ":" -f 1 "${ROOT}/etc/passwd" | sed 's/^/\^/' | sed 's/$/:.*$/')
grep -v -x -f <(echo "${PATTERNS}") <(grep -E -e "^(${COPY_USERS}):" "${BASE}/passwd") >> "${ROOT}/etc/passwd"
PATTERNS=$(cut -s -d ":" -f 1 "${ROOT}/etc/group" | sed 's/^/\^/' | sed 's/$/:.*$/')
grep -v -x -f <(echo "${PATTERNS}") <(grep -E -e "^(${COPY_GROUPS}):" "${BASE}/group") >> "${ROOT}/etc/group"

# secure files
umask 027
PATTERNS=$(cut -s -d ":" -f 1 "${ROOT}/etc/shadow" | sed 's/^/\^/' | sed 's/$/:.*$/')
grep -v -x -f <(echo "${PATTERNS}") <(grep -E -e "^(${COPY_USERS}):" "${BASE}/shadow") >> "${ROOT}/etc/shadow"
PATTERNS=$(cut -s -d ":" -f 1 "${ROOT}/etc/gshadow" | sed 's/^/\^/' | sed 's/$/:.*$/')
grep -v -x -f <(echo "${PATTERNS}") <(grep -E -e "^(${COPY_GROUPS}):" "${BASE}/gshadow") >> "${ROOT}/etc/gshadow"

# The script runs without set -euo pipefail and allows grep to return 1, thus the last statement must not be grep
# because it would propagate the exit code 1 and let the systemd unit fail.
exit 0
